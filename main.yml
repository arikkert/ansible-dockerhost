# https://docs.docker.com/engine/install/centos/
# docker is group of target hosts, e.g. docker01 and docker02
---
- name: Provision dockerhosts, servers that host docker containers
  hosts: docker
  vars:
    _ansible_distribution: "CentOS"
    _ansible_distribution_major_version: 9
    tz: Europe/Amsterdam
    pv: sdb
    vg: vg01
    lv: data
    mp: "/container-data"  # MountPoint
    repo: docker-ce

  tasks:

    - name: Ensure OS is supported
      ansible.builtin.assert:
        that:
          - ansible_distribution == _ansible_distribution
          - ansible_distribution_major_version | int == _ansible_distribution_major_version | int
        fail_msg: "Playbook only suitable for distro {{ ansible_distribution }} major version {{ ansible_distribution_major_version }}"
        success_msg: "Yes, OS is fine"


    #
    # docker itself
    #

    - name: Ensure old versions are not present
      ansible.builtin.yum:
        name:
          - docker
          - docker-client
          - docker-client-latest
          - docker-common
          - docker-latest
          - docker-latest-logrorate
          - docker-logrorate
          - docker-engine
        state: absent

    - name: Ensure docker-ce repo is installed
      ansible.builtin.shell: yum-config-manager --add-repo=https://download.docker.com/linux/centos/{{ repo }}.repo
      args:
        creates: /etc/yum.repos.d/{{ repo }}.repo

    - name: Ensure this repo is installed {{ repo }}
      ansible.builtin.yum:
        name: "{{ repo }}"

    - name: Ensure docker version is detected
      ansible.builtin.shell: docker --version
      register: docker_version
      changed_when: false
      check_mode: false

    - name: Ensure docker version is shown
      ansible.builtin.debug:
        msg: "{{ docker_version.stdout.split('\n') }}"

    - name: Ensure docker is running and enabled
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: true

    #
    # docker-compose & docker compose plugin
    # Not really needed to install them both
    #

    - name: Docker-compose
      tags: docker-compose
      block:

      # not the old system docker-compose from redhat repo
        - name: Compose deps - remove docker-compose
          ansible.builtin.yum:
            name: docker-compose
            state: absent

        # https://docs.docker.com/compose/install/#alternative-install-options
        - name: Ensure up2date downloaded version docker-compose is present
          ansible.builtin.get_url:
            url: https://github.com/docker/compose/releases/download/v2.29.2/docker-compose-{{ ansible_system }}-{{ ansible_machine }}
            dest: /usr/local/bin/docker-compose
            backup: true
            mode: '0755'

        - name: Ensure docker-compose version is detected
          ansible.builtin.shell: /usr/local/bin/docker-compose --version
          register: dockercompose_version
          changed_when: false
          check_mode: false

        - name: Ensure docker-compose version is shown
          ansible.builtin.debug:
            msg: "{{ dockercompose_version.stdout.split('\n') }}"

    - name: Docker compose as docker plugin
      tags: docker compose
      block:

        - name: Install docker compose plugin
          ansible.builtin.yum:
            name: docker-compose-plugin
            state: present

        - name: Ensure docker compose version is detected
          ansible.builtin.shell: docker compose version
          register: dockercompose_version
          changed_when: false
          check_mode: false

        - name: Ensure docker compose version is shown
          ansible.builtin.debug:
            msg: "{{ dockercompose_version.stdout.split('\n') }}"

    #
    # continue
    #

    - name: Ensure user docker is installed
      ansible.builtin.user:
        name: docker
        groups: docker
        append: true

    - name: Ensure sudo is installed
      ansible.builtin.package:
        name: sudo

    - name: Ensure user docker can elevate privileges
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /etc/sudoers.d/
        mode: '0440'
        validate: visudo -cf %s
      loop:
        - 10_docker

    - name: VG deps
      ansible.builtin.yum:
        name:
          - lvm2

    - name: Ensure VG exists
      community.general.lvg:
        pvs: /dev/{{ pv }}
        vg: "{{ vg }}"

    - name: Ensure LV exists
      community.general.lvol:
        vg: "{{ vg }}"
        lv: "{{ lv }}"
        size: 40G
        pvs: /dev/{{ pv }}

    - name: Ensure FS exists
      community.general.filesystem:
        fstype: xfs
        dev: /dev/mapper/{{ vg }}-{{ lv }}

    - name: Ensure MP (mountpoint) exists
      ansible.builtin.file:
        path: "{{ mp }}"
        state: directory
        mode: '0755'

    - name: Ensure MP is mounted
      ansible.posix.mount:
        path: "{{ mp }}"
        src: /dev/mapper/{{ vg }}-{{ lv }}
        fstype: xfs
        state: mounted

    #
    # helpers
    #

    - name: TZ {{ tz }}
      community.general.timezone:
        name: "{{ tz }}"

...
